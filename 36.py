# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента,
# как, например, у операции умножения.

# *Пример:*

# **Ввод:** `print_operation_table(lambda x, y: x * y) ` 
# **Вывод:**

# 1 2 3 4 5 6
# 2 4 6 8 10 12
# 3 6 9 12 15 18
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36

# # Присвоение функции lambda переменной
# my_lambda = lambda x: x * 2

# # Вызов функции lambda через переменную
# result = my_lambda(3)
# print(result)  # Вывод: 6

# Функция print() в Python имеет несколько параметров, которые позволяют настроить вывод. Вот некоторые из них:

# end: Определяет, какой символ должен быть добавлен в конец вывода (по умолчанию - перевод строки '\n').

# sep: Определяет разделитель между значениями, если передано несколько аргументов для вывода (по умолчанию - пробел ' ').

# file: Определяет файловый объект, куда будет направлен вывод (по умолчанию - стандартный вывод sys.stdout).

# flush: Если True, то буфер будет принудительно опорожнен. Это может быть полезно, чтобы убедиться, что данные выведены немедленно.

#! Решение списано с готовых, ибо я в душе не чаю как его делать, условие запутанное, объяснение запутанное
#! нигде больше такого не встречал, только на вашем курсе на питоне, ранние задачи требовали прослушать ваше
#! объяснение на семенаре. В этот раз я без шуток вслушивался в каждое слово по 10 раз и не смог понять что от меня требуется.
#! Надеюсь и остальные не промолчат и поделяться своим мнением касательно ваших задач. Отправил её только ради того,
#! чтобы вы увидели этот комментарий. Не нужно засчитывать эту задачу, просто хочу увидеть понятные условия, что ставят передо мной
#! Вы ведь преподаватель, как никак)

# Функция для печати таблицы операций
def print_operation_table(operation, num_rows, num_columns):
    print("\n")  # Пустая строка для разделения вывода
    for i in range(1, num_rows + 1):
        for j in range(1, num_columns + 1):
            # Вычисляем значение операции для текущих индексов i и j
            value = operation(i, j)
            # Выводим значение с табуляцией и без перехода на новую строку
            print(value, end='\t')
        print("\n")  # Переход на новую строку после окончания строки
    print("\t")  # Пустая строка для завершения вывода

# Получаем количество строк и столбцов от пользователя
num_rows = int(input("Введите количество строк: "))
num_columns = int(input("Введите количество столбцов: "))

# Вызываем функцию print_operation_table, передавая лямбда-функцию умножения,
# количество строк и столбцов
print_operation_table(lambda x, y: x * y, num_rows, num_columns)

